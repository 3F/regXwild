{
  "Header": {
    "_": [
      " This file for vsSolutionBuildEvent ",
      " https://github.com/3F/vsSolutionBuildEvent "
    ],
    "Compatibility": "0.12.4"
  },
  "PreBuild": [
    {
      "Enabled": true,
      "Name": "ActVersion",
      "Caption": "Update version of regXwild",
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command__": [
          "$(oraw      = \"bin\\raw\")",
          "$(orawApp   = \"$(oraw)\\$(Configuration)\\$(Platform)/\")",
          "$(odir      = \"bin/Releases/\")",
          "$(onupkg    = \"bin/nupkg/\")",
          "",
          "#[$(pDir    = \"regXwild\")]",
          "#[$(pConari = \"Conari\")]",
          "",
          "",
          "#[var pVer  = #[File get(\".version\")]]",
          "",
          "#[IO replace.Regexp(\"$(pDir)/regXwildAPI.cpp\", \"(vsSBE.+?_T\\().+?;\", \"$1\\\"$(pVer)\\\");\")]",
          "",
          "#[IO replace.Regexp(\"regXwild.nuspec\", \"<version>.+?</version>\", \"<version>$(pVer)</version>\")]",
          "#[IO replace.Regexp(\"regXwild.nuspec\", \"\\\"regXwild/[0-9.]+\\\"\", \"\\\"regXwild/$(pVer)\\\"\")]",
          "",
          "",
          ""
        ]
      }
    },
    {
      "Enabled": false,
      "Name": "ActSubmodules",
      "Caption": "submodules and packages",
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command__": [
          "##[( !(#[IO exists.file(\"$(pConari)/Conari.sln\")]) )",
          "{",
          "    #[File call(\"git\", \"submodule update --init --recursive Conari\", 1000)]",
          "}]"
        ]
      }
    }
  ],
  "PostBuild": [
    {
      "Enabled": true,
      "Name": "ActSnetGnt",
      "Caption": "snet helper",
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command__": [
          "#[IO write(\"$(orawApp)snet-run.bat\"):@echo off",
          "",
          "set ConariVersion=1.4.0",
          "set gnt=..\\..\\tools\\gnt.bat",
          "set platform=net40",
          "set Conari=Conari.dll",
          "",
          "if not exist %Conari% if not exist %gnt% goto notfound",
          "",
          "call %gnt% /p:ngpackages=\"Conari/%ConariVersion%\" || goto notfound",
          "",
          "copy /B/Y packages\\Conari.%ConariVersion%\\lib\\%platform%\\%Conari% \"%cd%\"",
          "snet.exe",
          "",
          ":notfound",
          "echo You need %Conari% v%ConariVersion% to continue. But even GetNuTool was not found to get it automatically. 1>&2",
          "echo Something went wrong, please get it manually: https://www.nuget.org/packages/Conari/%ConariVersion% 1>&2",
          "pause",
          "exit /B 2",
          "]"
        ]
      }
    },
    {
      "Enabled": true,
      "Name": "ActPack",
      "Caption": "Create zip archive of regXwild",
      "IgnoreIfBuildFailed": true,
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command__": [
          "#[($(__InitBuild) == 1) {",
          "    #[try{ #[IO delete.directory(\"$(odir)\", true)] }catch{ }]",
          "}]",
          "",
          "#[IO copy.directory(\"\", \"$(odir)\", true)]",
          "#[IO copy.file(",
          "        {",
          "            \"$(pDir)\\declspec.h\",",
          "            \"$(pDir)\\regXwild.h\",",
          "            \"$(pDir)\\regXwildAPI.h\",",
          "            \"$(pDir)\\regXwildConf.h\",",
          "            \"$(pDir)\\stdafx.h\",",
          "            \"$(pDir)\\typedefs.h\"",
          "        }, ",
          "        \"$(orawApp)\\include\",",
          "        true)]",
          "        ",
          "#[IO copy.file({ \"Readme.md\", \"LICENSE\", \"changelog.txt\", \".version\" }, \"$(oraw)\", true)]",
          "#[IO copy.file({ \"tools\\*.bat\" }, \"$(oraw)\\tools\\\\\", true)]",
          "#[7z pack.files(",
          "        {",
          "            \"$(oraw)\\Readme.md\", ",
          "            \"$(oraw)\\LICENSE\",",
          "            \"$(oraw)\\changelog.txt\",",
          "            \"$(oraw)\\.version\",",
          "            \"$(oraw)\\tools\\*.bat\",",
          "            \"$(orawApp)\\include\\*.h\",",
          "            \"$(orawApp)algo.exe\", ",
          "            \"$(orawApp)snet.exe\", ",
          "            \"$(orawApp)snet-run.bat\",",
          "            \"$(orawApp)regXwild.dll\",",
          "            \"$(orawApp)regXwild.lib\",",
          "            \"$(orawApp)regXwild.exp\",",
          "            \"$(orawApp)regXwild.pdb\"",
          "        }, ",
          "        \"$(odir)regXwild.$(pVer).$(Platform).$(CharacterSet:regXwild).zip\")]",
          ""
        ]
      }
    },
    {
      "Enabled": true,
      "Name": "ActNupkg",
      "Caption": "Prepare regXwild for NuGet",
      "IgnoreIfBuildFailed": true,
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command__": [
          "#[($(__InitBuild) == 1) {",
          "    #[try{ #[IO delete.directory(\"$(onupkg)\", true)] }catch{ }]",
          "}]",
          "",
          "#[$(onupkgBin = \"$(onupkg)lib\\\\native\\\\$(Platform)-$(CharacterSet:regXwild)\\\\\")]",
          "",
          "#[\" https://github.com/3F/DllExport/issues/36 \"]",
          "#[IO copy.directory(\"\", \"$(onupkg)/lib/net/\", true)]",
          "#[IO write(\"$(onupkg)/lib/net/_._\"):]",
          "",
          "#[IO copy.directory(\"\", \"$(onupkg)/lib/netcoreapp/\", true)]",
          "#[IO write(\"$(onupkg)/lib/netcoreapp/_._\"):]",
          "",
          "#[IO copy.directory(\"\", \"$(onupkg)/lib/netstandard/\", true)]",
          "#[IO write(\"$(onupkg)/lib/netstandard/_._\"):]",
          "",
          "#[IO copy.directory(\"$(orawApp)\\include\", \"$(onupkgBin)include\", true, true)]",
          "#[IO copy.directory(\"tools\", \"$(onupkg)tools\", true, true)]",
          "",
          "#[IO replace(\"$(orawApp)snet-run.bat\", \"..\\..\\tools\\gnt.bat\", \"..\\..\\..\\tools\\gnt.bat\")]",
          "#[IO copy.file({",
          "            \"$(orawApp)algo.exe\", ",
          "            \"$(orawApp)snet.exe\", ",
          "            \"$(orawApp)snet-run.bat\",",
          "            \"$(orawApp)regXwild.dll\",",
          "            \"$(orawApp)regXwild.lib\",",
          "            \"$(orawApp)regXwild.exp\",",
          "            \"$(orawApp)regXwild.pdb\"",
          "        }, ",
          "        \"$(onupkgBin)\", true)]",
          "        ",
          "#[IO copy.file({ ",
          "            \"regXwild.nuspec\", ",
          "            \"Readme.md\", ",
          "            \"LICENSE\", ",
          "            \"changelog.txt\" ",
          "        }, ",
          "        \"$(onupkg)\", true)]",
          "",
          "#[IO copy.directory(\"\", \"$(onupkg)build\\native\", true)]",
          "#[IO copy.file(\"regXwild_native.targets\", \"$(onupkg)build\\native/regXwild.targets\", true)]",
          "",
          "#[IO copy.directory(\"\", \"$(onupkg)build\\net\", true)]",
          "#[IO copy.file(\"regXwild_net.targets\", \"$(onupkg)build\\net/regXwild.targets\", true)]",
          "",
          "#[IO copy.directory(\"\", \"$(onupkg)build\\netcoreapp\", true)]",
          "#[IO copy.file(\"regXwild_net.targets\", \"$(onupkg)build\\netcoreapp/regXwild.targets\", true)]",
          "",
          "#[IO copy.directory(\"\", \"$(onupkg)build\\netstandard\", true)]",
          "#[IO copy.file(\"regXwild_net.targets\", \"$(onupkg)build\\netstandard/regXwild.targets\", true)]",
          ""
        ]
      }
    },
    {
      "Enabled": false,
      "Name": "ActConari",
      "Caption": "Conari build ...",
      "IgnoreIfBuildFailed": true,
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command__": [
          "#[IO writeLine(STDOUT):Preparing of Conari engine...]",
          "",
          "#[(! #[IO exists.directory(\"$(pConari)\\bin\\Release\\raw\")] ) {",
          "    #[IO cmd(\"cd $(pConari) & build Release\", 400)]",
          "}]",
          "",
          "",
          "#[try { ",
          "    #[IO copy.directory(\"Conari\\Conari\\bin\\Release\", \"$(onupkgBin)../Conari/\", true)]",
          "}",
          "catch(err, msg){",
          "    #[IO writeLine(STDOUT): #[$(msg)] - #[$(err)]]",
          "}]"
        ]
      }
    },
    {
      "Enabled": true,
      "Name": "ActNuGet",
      "Caption": "Final packing - regXwild + Conari",
      "IgnoreIfBuildFailed": true,
      "Mode": {
        "$type": "net.r_eg.vsSBE.Events.ModeScript, vsSolutionBuildEvent",
        "Type": "Script",
        "Command__": [
          "#[($(__FinalBuild) == 1) {",
          "    #[NuGet gnt.raw(\"/t:pack /p:ngin=\\\"$(onupkg)\\\" /p:ngout=\\\"$(odir)\\\"\")]",
          "}]"
        ]
      }
    }
  ]
}