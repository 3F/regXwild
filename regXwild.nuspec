<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd">
  <metadata>
    <id>regXwild</id>
    <version>1.1.0</version>
    <title>[ regXwild ] Fast advanced wildcards</title>
    <authors>github.com/3F/regXwild</authors>
    <license type="file">LICENSE</license>
    <owners>reg</owners>
    <licenseUrl>https://aka.ms/deprecateLicenseUrl</licenseUrl>
    <projectUrl>https://github.com/3F/regXwild</projectUrl>
    <repository type="git" url="https://github.com/3F/regXwild" />
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>
        Small and super Fast advanced wildcards! `*,|,?,^,$,+,#,&gt;` in addition to slow regex engine and more.

        Unique algorithms that was implemented on native unmanaged C++ but easily accessible also in .NET
        through Conari (recommended due to caching of 0x29 opcodes and other related optimization).

        This package contains x64 + x32 Unicode + MultiByte modules
        and provides both support of the unmanaged and managed projects:
        
        * For native: .\lib\native\{Platform}-(Unicode or MultiByte)\ ~ regXwild.dll, regXwild.lib, regXwild.exp, include\*.h
        * For .NET it will put x32 &amp; x64 regXwild into (TargetDir). Use it with your .net modules through Conari ( https://github.com/3F/Conari ) and so on.

        ```
        = searchEssC(L"number = '1271';", L"number = '????';", true);
        ```

        ## Why regXwild ?

        It was designed to be faster than just fast, when using more features that usually go beyond the typical wildcards.

        üîç Easy to start:

        Unmanaged native C++ or managed .NET project. It doesn't matter, just use it:

        C++
        ```cpp
        #include "regXwildAPI.h"
        using namespace net::r_eg::regXwild;
        ...
        if(searchEssC(_T("regXwild"), _T("reg?wild"), true)) {
            // ...
        }
        ```

        C# if you're using [ [Conari](https://github.com/3F/Conari) ]
        ```csharp
        using(var l = new ConariL("regXwild.dll")) 
        {
            if(l.DLR.searchEssC&lt;bool&gt;("regXwild", "reg?wild", true)) {
                // ...
            }
        }
        ```

        üèÑ Amazing meta symbols:

        ESS version (advanced EXT version)

        ```cpp
        enum MetaSymbols
        {
            MS_ANY      = _T('*'), // {0, ~}
            MS_SPLIT    = _T('|'), // str1 or str2 or ...
            MS_ONE      = _T('?'), // {0, 1}, ??? - {0, 3}, ...
            MS_BEGIN    = _T('^'), // [str... or [str1... |[str2...
            MS_END      = _T('$'), // ...str] or ...str1]| ...str2]
            MS_MORE     = _T('+'), // {1, ~}
            MS_SINGLE   = _T('#'), // {1}
            MS_ANYSP    = _T('&gt;'), // as [^/]*
        };
        ```

        EXT version (more simplified than ESS)

        ```cpp
        enum MetaSymbols 
        {
            MS_ANY      = _T('*'),
            MS_ANYSP    = _T('&gt;'), //as [^/\\]+
            MS_SPLIT    = _T('|'),
            MS_ONE      = _T('?'),
        };
        ```

        Check it with our actual **Unit-Tests**.

        üöÄ Awesome speed: 

        * [~2000 times faster when C++](https://github.com/3F/regXwild#speed).
        * For .NET (including modern .NET Core), [Conari](https://github.com/3F/Conari) provides optional caching of 0x29 opcodes (Calli) and more to get a similar result as possible.

        üç∞ Open and Free:

        Open Source project; MIT License, Enjoy üéâ

        - - - - - - - - - - - - - - - -
        https://github.com/3F/regXwild
        - - - - - - - - - - - - - - - - 
        
        ~~~~~~~~
        Get it via GetNuTool:
        ===================================
        gnt /p:ngpackages="regXwild/1.1.0"
        ===================================
        * https://github.com/3F/GetNuTool
        
    </description>
    <summary>Small and super Fast advanced wildcards! `*,|,?,^,$,+,#,&gt;` in addition to slow regex engine and more. https://github.com/3F/regXwild</summary>
    <tags>wildcards advanced-wildcards fast-wildcards fast-regex extended-wildcards strings text filter search matching search-in-text regex filters powerful-wildcards regexp cpp c dotnet dotnetcore csharp Conari regXwild native</tags>
    <releaseNotes> changelog: https://github.com/3F/regXwild/blob/master/changelog.txt </releaseNotes>
    <copyright>Copyright (c) 2013-2014, 2016-2017, 2020  Denis Kuzmin &lt; x-3F@outlook.com &gt; GitHub/3F</copyright>
  </metadata>
</package>